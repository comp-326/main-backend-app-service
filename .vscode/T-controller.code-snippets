{
	// Place your backend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "T-contr",
		"body": [
			"import { $1 } from '../use-cases';",
			"import { INext, IRequest, IResponse } from '@exam-cell-common/types';",
			"type Props = {",
			"useCase: $1",
			"}",
			"export function $2({ useCase }: Props) {",
			"return async (req: IRequest, res: IResponse, next: INext) => {",
			"try {",
			"const response = await useCase(req.body);",
			"return res.status(200).json({ data:response });",
			"} catch (err) {",
			"return next(err);",
			"}",
			"};",
			"}"
		],
		"description": "Log output to console"
	}
}