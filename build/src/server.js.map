{"version":3,"sources":["../../src/server.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACjC,gDAAwB;AACxB,kDAA0B;AAC1B,qCAA6C;AAC7C,gDAAwB;AACxB,oDAA4B;AAE5B,MAAM,MAAM,GAAG,cAAI,CAAC,YAAY,CAAC,aAAG,CAAC,CAAC;AAEtC,MAAM,CAAC,MAAM,CAAC,0BAAiB,CAAC,IAAI,EAAE,GAAG,EAAE;IAC1C,MAAM,IAAI,GAAG,IAAA,gBAAM,EAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACzD,MAAM,gBAAgB,GAAG,qBAAqB,eAAK,CAAC,MAAM,CACzD,IAAI,CACJ,6BAA6B,eAAK,CAAC,IAAI,CAAC,MAAM,CAC9C,oBAAoB,0BAAiB,CAAC,IAAI,EAAE,CAC5C,EAAE,CAAC;IACJ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC","file":"server.js","sourcesContent":["require('module-alias/register');\nimport app from './app';\nimport chalk from 'chalk';\nimport { environmentConfig } from './config';\nimport http from 'http';\nimport moment from 'moment';\n\nconst server = http.createServer(app);\n\nserver.listen(environmentConfig.PORT, () => {\n\tconst time = moment(new Date().getTime()).format('LLLL');\n\tconst connectionString = `Server started on ${chalk.yellow(\n\t\ttime,\n\t)} \\nApp running running on ${chalk.bold.yellow(\n\t\t`http://localhost:${environmentConfig.PORT}`,\n\t)}`;\n\tconsole.log(connectionString);\n});\n"]}