{"version":3,"sources":["../../src/utils/fileSystem/envSetup.ts"],"names":[],"mappings":"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","file":"envSetup.js","sourcesContent":["import crypto from 'crypto';\nimport dirExistSync from './dirExist';\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nfunction setEnvironmentVariables(envFilePath: string) {\n\tlet filepath = '';\n\n\ttry {\n\t\tfilepath = path.join(path.dirname(envFilePath), '.env.example');\n\t} catch (err) {\n\t\tconsole.log('File does not exist');\n\t\tprocess.exit();\n\t}\n\tconst environmentPath = path.join(path.dirname(envFilePath), '.env');\n\tconst data: { [x: string]: string } = {};\n\tfs.readFileSync(filepath, 'utf8')\n\t\t.split(os.EOL)\n\t\t.forEach((line) => {\n\t\t\tconst [k, v] = line.trim().split('=');\n\n\t\t\tif (k !== '') data[k] = v;\n\t\t});\n\n\tdata['PORT'] = '6200';\n\tdata['SECRET_KEY'] = crypto.randomBytes(64).toString('hex');\n\tdata['REFRESH_KEY'] = crypto.randomBytes(64).toString('hex');\n\tdata['ENC_KEY'] = crypto.randomBytes(64).toString('hex');\n\tdata['APP_NAME'] = 'exam-cell-automaton';\n\tdata['API_PREFIX'] = '/api/v1';\n\tdata['HOST'] = 'localhost';\n\tdata[\n\t\t'DATABASE_URL'\n\t] = `mongodb://localhost:27017/${data['APP_NAME']}dev`;\n\tdata[\n\t\t'TEST_DB_URL'\n\t] = `mongodb://localhost:27017/${data['APP_NAME']}testdb`;\n\n\tconst envExist = dirExistSync(path.join(path.dirname(envFilePath), '.env'));\n\tif (envExist) {\n\t\tfs.readFileSync(path.join(path.dirname(filepath), '.env'), 'utf8')\n\t\t\t.split(os.EOL)\n\t\t\t.forEach((line) => {\n\t\t\t\tif (line !== '') {\n\t\t\t\t\tconst [k, v] = line.trim().split('=');\n\t\t\t\t\tif (v !== '') data[k] = v;\n\n\t\t\t\t\tif (!Object.keys(data).includes(k)) data[k] = v;\n\t\t\t\t}\n\t\t\t});\n\t}\n\tconst env = Object.entries(data)\n\t\t.sort((a, b) => {\n\t\t\treturn a[0].localeCompare(b[0]);\n\t\t})\n\t\t.map(([k, v]) => {\n\t\t\treturn k !== '' && `${k}=${v}`;\n\t\t});\n\tconst sampleEnvBuffer = Object.entries(data)\n\t\t.sort((a, b) => a[0].localeCompare(b[0]))\n\t\t.map(([k]) => {\n\t\t\treturn `${k}=`;\n\t\t});\n\n\tfs.writeFileSync(environmentPath, env.join(os.EOL), 'utf8');\n\tfs.writeFileSync(\n\t\tpath.join(path.dirname(envFilePath), '.env.example'),\n\t\tsampleEnvBuffer.join(os.EOL),\n\t\t'utf8',\n\t);\n}\n\nexport default setEnvironmentVariables;\n"]}