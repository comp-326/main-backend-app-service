{"version":3,"sources":["../../src/utils/logger/index.ts"],"names":[],"mappings":";;;;;;AACA,yCAAwC;AACxC,oDAA4B;AAC5B,gDAAwB;AACxB,sDAA8B;AAMjB,QAAA,mBAAmB,GAAG;IAClC,UAAU,EAAE;QACX,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,EAAE;QAChC,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;YAC3B,QAAQ,EAAE,cAAI,CAAC,IAAI,CAAC,cAAI,CAAC,OAAO,CAAC,iBAAQ,CAAC,EAAE,MAAM,EAAE,YAAY,CAAC;SACjE,CAAC;KACF;IAED,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC7B,iBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EACzB,iBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EACrB,iBAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QACxB,KAAK,EAAE,WAAW;QAClB,MAAM,EAAE,gBAAM,CAAC,SAAS,CAAC,iBAAiB;KAC1C,CAAC,EACF,iBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CACzB;IACD,WAAW,EAAE,KAAK;CAClB,CAAC;AAKW,QAAA,cAAc,GAAG;IAC7B,UAAU,EAAE;QACX,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,EAAE;QAChC,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;YAC3B,QAAQ,EAAE,cAAI,CAAC,IAAI,CAClB,cAAI,CAAC,OAAO,CAAC,iBAAQ,CAAC,EACtB,MAAM,EACN,GAAG,IAAA,gBAAM,EAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CACrC,YAAY,CACZ,0BAA0B,CAC3B;SACD,CAAC;KACF;IACD,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC7B,iBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EACzB,iBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CACrB;IACD,IAAI,EAAE,IAAI;IACV,GAAG,EAAE,iCAAiC;IACtC,aAAa,EAAE,IAAI;IACnB,QAAQ,EAAE,KAAK;IAEf,WAAW,EAAE,UAAU,GAAa,EAAE,GAAc;QACnD,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAC","file":"index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BASE_DIR } from '../../config';\nimport moment from 'moment';\nimport path from 'path';\nimport winston from 'winston';\nimport { IRequest, IResponse } from '../../common/types';\n\n/**\n * ----------------------------  LOG HTTP ERROR REQUESTS OPTIONS -------------------------\n */\nexport const httpErrorLogOptions = {\n\ttransports: [\n\t\tnew winston.transports.Console(),\n\t\tnew winston.transports.File({\n\t\t\tfilename: path.join(path.dirname(BASE_DIR), 'logs', 'error.json')\n\t\t})\n\t],\n\n\tformat: winston.format.combine(\n\t\twinston.format.colorize(),\n\t\twinston.format.json(),\n\t\twinston.format.timestamp({\n\t\t\talias: 'timestamp',\n\t\t\tformat: moment.HTML5_FMT.DATETIME_LOCAL_MS\n\t\t}),\n\t\twinston.format.metadata()\n\t),\n\texitOnError: false\n};\n\n/**\n * ---------------------------- LOG HTTP REQUESTS -----------------------------------\n */\nexport const httpLogOptions = {\n\ttransports: [\n\t\tnew winston.transports.Console(),\n\t\tnew winston.transports.File({\n\t\t\tfilename: path.join(\n\t\t\t\tpath.dirname(BASE_DIR),\n\t\t\t\t'logs',\n\t\t\t\t`${moment(new Date().getTime()).format(\n\t\t\t\t\t'YYYY-MM-DD'\n\t\t\t\t)}-http-requests-logs.json`\n\t\t\t)\n\t\t})\n\t],\n\tformat: winston.format.combine(\n\t\twinston.format.colorize(),\n\t\twinston.format.json()\n\t),\n\tmeta: true,\n\tmsg: 'HTTP {{req.method}} {{req.url}}',\n\texpressFormat: true,\n\tcolorize: false,\n\t// eslint-disable-next-line no-unused-vars\n\tignoreRoute: function (req: IRequest, res: IResponse){\n\t\treturn false;\n\t}\n};\n"]}