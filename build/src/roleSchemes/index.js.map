{"version":3,"sources":["../../src/roleSchemes/index.ts"],"names":[],"mappings":";;;;;AAAA,sCAA8C;AAC9C,0EAAyD;AAEzD,MAAM,YAAY;IAAlB;QAES,2BAAsB,GAAG,KAAK,IAAI,EAAE;YAC3C,MAAM,gBAAa,CAAC,WAAW,EAAE,CAAC;QAEnC,CAAC,CAAC;QACF,YAAO,GAAG,KAAK,IAAI,EAAE;YACpB,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,gCAAgC,0BAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC;IAEH,CAAC;CAAA;AACD,CAAC,KAAK,IAAI,EAAE;IACX,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;IACxC,MAAM,YAAY,CAAC,OAAO,EAAE,CAAC;IAC7B,UAAU,CAAC,GAAG,EAAE;QACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC,CAAC;AACV,CAAC,CAAC,EAAE,CAAC","file":"index.js","sourcesContent":["import { environmentConfig } from '../config';\nimport userRoleModel from '../features/userRoles/models';\n\nclass RoleMigrator {\n\n\tprivate migrateUserPermissions = async () => {\n\t\tawait userRoleModel.InsertRoles();\n\n\t};\n\tmigrate = async () => {\n\t\tawait this.migrateUserPermissions();\n\t\tconsole.log(`Role migration successful----${environmentConfig.NODE_ENV}`);\n\t};\n\n}\n(async () => {\n\tconst roleMigrator = new RoleMigrator();\n\tawait roleMigrator.migrate();\n\tsetTimeout(() => {\n\t\tprocess.exit(0);\n\t}, 3000);\n})();\n\n\n"]}