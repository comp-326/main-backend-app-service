{"version":3,"sources":["../../src/services/mailService/mailer/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable sort-imports */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport DKIM from 'nodemailer/lib/dkim';\nimport { Readable } from 'stream';\nimport nodemailer from 'nodemailer';\nimport {\n\tAddress,\n\tAttachment,\n\tAttachmentLike,\n\tHeaders,\n\tIcalAttachment,\n\tListHeaders,\n\tTextEncoding\n} from 'nodemailer/lib/mailer';\nimport { mailConfig } from '../../../config';\n\n\ninterface IMailer {\n\thost: string;\n\tport: number;\n\tproxy: string;\n\tsecure: boolean;\n\tusername: string;\n\tpassword: string;\n}\n\ninterface ISendMailOptions {\n\t/** The e-mail address of the sender. All e-mail addresses can be plain 'sender@server.com' or formatted 'Sender Name <sender@server.com>' */\n\tfrom?: string | Address | undefined;\n\t/** An e-mail address that will appear on the Sender: field */\n\tsender?: string | Address | undefined;\n\t/** Comma separated list or an array of recipients e-mail addresses that will appear on the To: field */\n\tto?: string | Address | Array<string | Address> | undefined;\n\t/** Comma separated list or an array of recipients e-mail addresses that will appear on the Cc: field */\n\tcc?: string | Address | Array<string | Address> | undefined;\n\t/** Comma separated list or an array of recipients e-mail addresses that will appear on the Bcc: field */\n\tbcc?: string | Address | Array<string | Address> | undefined;\n\t/** An e-mail address that will appear on the Reply-To: field */\n\treplyTo?: string | Address | undefined;\n\t/** The message-id this message is replying */\n\tinReplyTo?: string | Address | undefined;\n\t/** Message-id list (an array or space separated string) */\n\treferences?: string | string[] | undefined;\n\t/** The subject of the e-mail */\n\tsubject?: string | undefined;\n\t/** The plaintext version of the message */\n\ttext?: any;\n\t/** The HTML version of the message */\n\thtml?: any;\n\t/** AMP4EMAIL specific HTML version of the message, same usage as with text and html. Make sure it is a full and valid AMP4EMAIL document, otherwise the displaying email client falls back to html and ignores the amp part */\n\tamp?: string | Buffer | Readable | undefined;\n\t/** iCalendar event, same usage as with text and html.\n\t * Event method attribute defaults to ‘PUBLISH’ or define it yourself: {method: 'REQUEST', content: iCalString}. This value is added as an additional alternative to html or text. Only utf-8 content is allowed\n\t * */\n\ticalEvent?: string | Buffer | Readable | IcalAttachment | undefined;\n\t/** An object or array of additional header fields */\n\theaders?: Headers | undefined;\n\t/** An object where key names are converted into list headers. List key help becomes List-Help header etc. */\n\tlist?: ListHeaders | undefined;\n\t/** An array of attachment objects */\n\tattachments?: Attachment[] | undefined;\n\t/** An array of alternative text contents (in addition to text and html parts) */\n\talternatives?: Attachment[] | undefined;\n\t/** optional Message-Id value, random value will be generated if not set */\n\tmessageId?: string | undefined;\n\t/** optional Date value, current UTC string will be used if not set */\n\tdate?: Date | string | undefined;\n\t/** optional transfer encoding for the textual parts */\n\tencoding?: string | undefined;\n\t/** if set then overwrites entire message output with this value. The value is not parsed, so you should still set address headers or the envelope value for the message to work */\n\traw?: string | Buffer | Readable | AttachmentLike | undefined;\n\t/** set explicitly which encoding to use for text parts (quoted-printable or base64). If not set then encoding is detected from text content (mostly ascii means quoted-printable, otherwise base64) */\n\ttextEncoding?: TextEncoding | undefined;\n\t/** if set to true then fails with an error when a node tries to load content from URL */\n\tdisableUrlAccess?: boolean | undefined;\n\t/** if set to true then fails with an error when a node tries to load content from a file */\n\tdisableFileAccess?: boolean | undefined;\n\t/** is an object with DKIM options */\n\tdkim?: DKIM.Options | undefined;\n\t/** method to normalize header keys for custom caseing */\n\tnormalizeHeaderKey?(key: string): string;\n\tpriority?: 'high' | 'normal' | 'low' | undefined;\n}\n\nclass Mailer implements IMailer{\n\thost: string;\n\n\tport: number;\n\n\tsecure: boolean;\n\n\tusername: string;\n\n\tpassword: string;\n\n\tproxy: string;\n\n\tconstructor(){\n\t\tthis.host = '';\n\t\tthis.port = 0;\n\t\tthis.secure = false;\n\t\tthis.username = '';\n\t\tthis.password = '';\n\t\tthis.proxy = '';\n\t}\n\n\tpublic setHost = (host: string) => {\n\t\tthis.host = host;\n\n\t\treturn this;\n\t};\n\n\tprotected getHost = () => this.host;\n\n\tpublic setPort = (port: number) => {\n\t\tthis.port = port;\n\n\t\treturn this;\n\t};\n\n\tprotected getPort = () => this.port;\n\n\tpublic setProxy = (proxy: string) => {\n\t\tthis.proxy = proxy;\n\n\t\treturn this;\n\t};\n\n\tprotected getProxy = () => this.proxy;\n\n\tpublic setSecure = (secure: boolean) => {\n\t\tthis.secure = secure;\n\n\t\treturn this;\n\t};\n\n\tprotected getSecure = () => this.secure;\n\n\tpublic setMailerUsername = (username: string) => {\n\t\tthis.username = username;\n\n\t\treturn this;\n\t};\n\n\tprotected getMailerUsername = () => this.username;\n\n\tpublic setMailerPassword = (password: string) => {\n\t\tthis.password = password;\n\n\t\treturn this;\n\t};\n\n\tprotected getMailerPassword = () => this.password;\n\n\tprotected setTransporterOptions = () => {\n\t\tconst options = {\n\t\t\tproxy: this.getProxy(),\n\t\t\thost: this.getHost(),\n\t\t\tport: this.getPort(),\n\t\t\tsecure: this.getSecure(),\n\t\t\tauth: {\n\t\t\t\tuser: this.getMailerUsername(),\n\t\t\t\tpass: this.getMailerPassword()\n\t\t\t}\n\t\t};\n\n\t\treturn nodemailer.createTransport(options);\n\t};\n\n\tpublic sendMail = (mailOptions: ISendMailOptions) => {\n\t\tconst transporter = this.setTransporterOptions();\n\n\t\treturn transporter.sendMail({ ...mailOptions });\n\t};\n}\n\nconst ostrichMailer = new Mailer();\nostrichMailer.setHost(mailConfig.EMAIL_HOST)\n\t.setMailerPassword(mailConfig.EMAIL_PASSWORD)\n\t.setPort(mailConfig.EMAIL_PORT)\n\t.setSecure(mailConfig.EMAIL_SECURE)\n\t.setMailerUsername(mailConfig.EMAIL_USER)\n\t.setProxy(mailConfig.EMAIL_PROXY);\n\n\nexport default ostrichMailer;\n"]}