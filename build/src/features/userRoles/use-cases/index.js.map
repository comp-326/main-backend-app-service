{"version":3,"sources":["../../src/features/userRoles/use-cases/index.ts"],"names":[],"mappings":";;;AAEA,MAAa,gBAAgB;IAG5B,YAAY,UAA+B;QAI3C,aAAQ,GAAG,KAAK,IAAI,EAAE;YACrB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAElD,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,KAAK,IAAI,EAAE;YACtB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;YAEhD,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;QAbD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC9B,CAAC;CAcD;AAnBD,4CAmBC","file":"index.js","sourcesContent":["import { IUserRoleRepository, IUserRoleUseCase } from '../interfaces';\n\nexport class UserRoleUseCases implements IUserRoleUseCase{\n\tprivate readonly repository: IUserRoleRepository;\n\n\tconstructor(repository: IUserRoleRepository){\n\t\tthis.repository = repository;\n\t}\n\n\taddRoles = async () => {\n\t\tconst roles = await this.repository.createRoles();\n\n\t\treturn roles;\n\t};\n\n\tlistRoles = async () => {\n\t\tconst roles = await this.repository.findRoles();\n\n\t\treturn roles;\n\t};\n\n}\n"]}