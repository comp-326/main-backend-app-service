{"version":3,"sources":["../../src/features/userRoles/routes/postNewRolesRoute.ts"],"names":[],"mappings":";;;;;AAEA,qCAAiC;AACjC,gDAAoD;AACpD,4CAAgD;AAChD,oDAA0D;AAC1D,+DAAgD;AAGhD,SAAwB,iBAAiB,CAAC,GAAW;IACpD,OAAO,CAAC,QAAgB,EAAE,EAAE;QAC3B,MAAM,gBAAgB,GAAG,IAAI,4BAAgB,CAAC,oBAAmB,CAAC,CAAC;QACnE,MAAM,UAAU,GAAG,IAAI,gCAAkB,CAAC,gBAAgB,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAA,gBAAM,GAAE,CAAC;QAC9B,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC;QACrC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,oBAAa,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;IAEpE,CAAC,CAAC;AACH,CAAC;AATD,oCASC","file":"postNewRolesRoute.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Router } from 'express';\nimport { UserRoleController } from '../controllers';\nimport { UserRoleUseCases } from '../use-cases';\nimport { adminRequired } from '../../../middlewares/Auth';\nimport userRolesRepository from '../repository';\n\n\nexport default function postNewRolesRoute(app: Router) {\n\treturn (pathName: string) => {\n\t\tconst userRolesUseCase = new UserRoleUseCases(userRolesRepository);\n\t\tconst controller = new UserRoleController(userRolesUseCase);\n\t\tconst folderRouter = Router();\n\t\tapp.use(`${pathName}`, folderRouter);\n\t\tfolderRouter.put('/insert', adminRequired, controller.createRoles);\n\n\t};\n}"]}