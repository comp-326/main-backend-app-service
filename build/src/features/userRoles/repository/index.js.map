{"version":3,"sources":["../../src/features/userRoles/repository/index.ts"],"names":[],"mappings":";;;;;AACA,yDAAwC;AAExC,MAAM,kBAAkB;IAAxB;QACC,eAAU,GAAG,KAAK,EAAE,IAAY,EAAE,EAAE;YACnC,MAAM,IAAI,GAAG,MAAM,gBAAa,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YACnD,IAAI,IAAI;gBAAE,OAAO,IAAI,CAAC;YAEtB,OAAO,IAAI,CAAC;QACb,CAAC,CAAC;QAEF,gBAAW,GAAG,KAAK,IAAI,EAAE;YACxB,MAAM,KAAK,GAAG,MAAM,gBAAa,CAAC,WAAW,EAAE,CAAC;YAEhD,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,KAAK,IAAI,EAAE;YACtB,MAAM,KAAK,GAAG,MAAM,gBAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE3C,OAAO,KAAK,CAAC;QACd,CAAC,CAAC;IAEH,CAAC;CAAA;AAED,kBAAe,IAAI,kBAAkB,EAAE,CAAC","file":"index.js","sourcesContent":["import { IUserRoleRepository } from './../interfaces';\nimport UserRoleModel from './../models';\n\nclass UserRoleRepository implements IUserRoleRepository{\n\tfindByName = async (name: string) => {\n\t\tconst role = await UserRoleModel.findOne({ name });\n\t\tif (role) return role;\n\n\t\treturn null;\n\t};\n\n\tcreateRoles = async () => {\n\t\tconst roles = await UserRoleModel.InsertRoles();\n\n\t\treturn roles;\n\t};\n\n\tfindRoles = async () => {\n\t\tconst roles = await UserRoleModel.find({});\n\n\t\treturn roles;\n\t};\n\n}\n\nexport default new UserRoleRepository();"]}