{"version":3,"sources":["../../src/features/userRoles/interfaces/index.ts"],"names":[],"mappings":"","file":"index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { IUserRoleDocument } from '../models/interfaces';\nimport { INext, IRequest, IResponse } from '../../../common/types';\n\nexport interface IUserRoleUseCase {\n\taddRoles: () => Promise<IUserRoleDocument[] | IUserRoleDocument|null>\n\tlistRoles: () => Promise<IUserRoleDocument[] | IUserRoleDocument|null>\n}\n\nexport interface IUserRoleRepository {\n\tfindByName: (name: string) => Promise<IUserRoleDocument|null>\n\tcreateRoles: () => Promise<IUserRoleDocument | IUserRoleDocument[]>\n\tfindRoles: () => Promise<IUserRoleDocument | IUserRoleDocument[]|null>\n}\n\nexport interface IUserRoleController {\n\tcreateRoles: (req: IRequest, res: IResponse, next: INext) => Promise<any>\n\tgetRoles: (req: IRequest, res: IResponse, next: INext) => Promise<any>\n}"]}