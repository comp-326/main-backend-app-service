{"version":3,"sources":["../../src/features/userRoles/models/index.ts"],"names":[],"mappings":";;;;;AACA,yFAA6D;AAC7D,yEAAkD;AAGlD,MAAM,cAAc,GAAuC,IAAI,iBAAQ,CAAC,MAAM,CAAC;IAC9E,OAAO,EAAE;QACR,IAAI,EAAE,OAAO;KACb;IACD,IAAI,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACZ;IACD,WAAW,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;KACN;CAED,EAAE;IACF,UAAU,EAAE,IAAI;CAChB,CAAC,CAAC;AAGH,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,UAAkB;IAClE,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,UAAU,CAAC;IAEjE,OAAO,SAAS,CAAC;AAClB,CAAC,CAAC;AAEF,cAAc,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,UAAkB;IAClE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC;AAEjC,CAAC,CAAC;AACF,cAAc,CAAC,OAAO,CAAC,gBAAgB,GAAG,UAAU,UAAkB;IACrE,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC;AAEjC,CAAC,CAAC;AAEF,cAAc,CAAC,OAAO,CAAC,eAAe,GAAG;IACxC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACtB,CAAC,CAAC;AAEF,cAAc,CAAC,OAAO,CAAC,cAAc,GAAG,KAAK;IAC5C,MAAM,WAAW,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAEnE,OAAO,WAAW,CAAC;AACpB,CAAC,CAAC;AAEF,cAAc,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK;IACzC,MAAM,KAAK,GAAgC;QAC1C,CAAC,MAAM,CAAC,EAAE;YACT,yBAAW,CAAC,IAAI;YAChB,yBAAW,CAAC,IAAI;YAChB,yBAAW,CAAC,KAAK;YACjB,yBAAW,CAAC,OAAO;YACnB,yBAAW,CAAC,IAAI;SAChB;QACD,CAAC,OAAO,CAAC,EAAE;YACV,yBAAW,CAAC,IAAI;YAChB,yBAAW,CAAC,IAAI;YAChB,yBAAW,CAAC,KAAK;YACjB,yBAAW,CAAC,OAAO;YACnB,yBAAW,CAAC,IAAI;YAChB,yBAAW,CAAC,KAAK;SACjB;KACD,CAAC;IACF,MAAM,WAAW,GAAG,MAAM,CAAC;IAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACtC,IAAI,IAAI,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI;YACR,IAAI,GAAG,IAAI,aAAa,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC;QACzC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,aAAa,GAAG,iBAAQ,CAAC,KAAK,CAA4C,WAAW,EAAE,cAAc,CAAC,CAAC;AAE7G,kBAAe,aAAa,CAAC","file":"index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Permissions from '../../../constants/userPermissions';\nimport mongoose from '../../../databases/mongodb';\nimport { IUserRoleDocument, IUserRoleDocumentModel } from './interfaces';\n\nconst userRoleSchema: mongoose.Schema<IUserRoleDocument> = new mongoose.Schema({\n\tdefault: {\n\t\ttype: Boolean,\n\t},\n\tname: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tunique: true\n\t},\n\tpermissions: {\n\t\ttype: Number,\n\t\trequired: true,\n\t\tmin: 0\n\t},\n\n}, {\n\ttimestamps: true\n});\n\n\nuserRoleSchema.methods.hasPermission = function (permission: number) {\n\tconst permitted = (this.permissions & permission) === permission;\n\n\treturn permitted;\n};\n\nuserRoleSchema.methods.addPermission = function (permission: number) {\n\tif (!this.hasPermission(permission))\n\t\tthis.permissions += permission;\n\n};\nuserRoleSchema.methods.removePermission = function (permission: number) {\n\tif (this.hasPermission(permission))\n\t\tthis.permissions -= permission;\n\n};\n\nuserRoleSchema.methods.resetPermission = function () {\n\tthis.permissions = 0;\n};\n\nuserRoleSchema.statics.getDefaultRole = async function () {\n\tconst defaultRole = await userRoleModel.findOne({ default: true });\n\n\treturn defaultRole;\n};\n\nuserRoleSchema.statics.InsertRoles = async function () {\n\tconst roles: { [key: string]: number[] } = {\n\t\t['User']: [\n\t\t\tPermissions.VIEW,\n\t\t\tPermissions.LIKE,\n\t\t\tPermissions.SHARE,\n\t\t\tPermissions.COMMENT,\n\t\t\tPermissions.USER\n\t\t],\n\t\t['Admin']: [\n\t\t\tPermissions.VIEW,\n\t\t\tPermissions.LIKE,\n\t\t\tPermissions.SHARE,\n\t\t\tPermissions.COMMENT,\n\t\t\tPermissions.USER,\n\t\t\tPermissions.ADMIN\n\t\t]\n\t};\n\tconst defaultRole = 'User';\n\tObject.keys(roles).forEach(async (r) => {\n\t\tlet role = await userRoleModel.findOne({ name: r });\n\t\tif (!role)\n\t\t\trole = new userRoleModel({ name: r });\n\n\t\trole.resetPermission();\n\t\tfor (const perm of roles[r])\n\t\t\trole.addPermission(perm);\n\n\t\trole.default = role.name === defaultRole;\n\t\tawait role.save();\n\t});\n};\nconst userRoleModel = mongoose.model<IUserRoleDocument, IUserRoleDocumentModel>('UserRoles', userRoleSchema);\n\nexport default userRoleModel;"]}