{"version":3,"sources":["../../src/features/users/entities/user.ts"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["import { ExpressError } from '../../../common/errors/ExpressError';\nimport { IUser } from '../models/interfaces';\nimport { IPassword, IUserValidator } from '../interfaces';\n\nexport default function makeCreateUserEntity({\n\tvalidator,\n\tpasswordUtil\n}: {\n\tvalidator: IUserValidator;\n\tpasswordUtil: IPassword;\n}){\n\treturn async function createUser({\n\t\temail,\n\t\tfirstName,\n\t\tlastName,\n\t\tpassword: userPassword,\n\t\tisActive,\n\t\trole, bio, gender, isDeleted, profilePicture\n\t}: IUser){\n\t\tconst { isValidEmail, isValidPassword } = validator;\n\t\tconst { hashPassword } = passwordUtil;\n\t\tif (!isValidEmail(email)) {\n\t\t\tthrow new ExpressError({\n\t\t\t\tmessage: 'Please provide a valid email',\n\t\t\t\tstatusCode: 400,\n\t\t\t\tstatus: 'warning',\n\t\t\t\tdata: {}\n\t\t\t});\n\t\t}\n\t\tif (!firstName) {\n\t\t\tthrow new ExpressError({\n\t\t\t\tmessage: 'First name required',\n\t\t\t\tdata: {},\n\t\t\t\tstatusCode: 400,\n\t\t\t\tstatus: 'warning'\n\t\t\t});\n\t\t}\n\t\tif (!lastName) {\n\t\t\tthrow new ExpressError({\n\t\t\t\tmessage: 'Last name required',\n\t\t\t\tdata: {},\n\t\t\t\tstatus: 'warning',\n\t\t\t\tstatusCode: 400\n\t\t\t});\n\t\t}\n\t\tif (!userPassword) {\n\t\t\tthrow new ExpressError({\n\t\t\t\tmessage: 'Password required',\n\t\t\t\tdata: {},\n\t\t\t\tstatus: 'warning',\n\t\t\t\tstatusCode: 400\n\t\t\t});\n\t\t}\n\t\tif (userPassword && userPassword.length < 50) {\n\t\t\tconst { ok, errors } = isValidPassword({\n\t\t\t\tprops: { firstName, lastName, password: userPassword },\n\t\t\t\tfields: [\n\t\t\t\t\t{ fieldName: 'firstName', name: 'First name' },\n\t\t\t\t\t{ fieldName: 'email', name: 'Email address' },\n\t\t\t\t\t{ fieldName: 'lastName', name: 'Last name' }\n\t\t\t\t]\n\t\t\t});\n\t\t\tif (!ok) {\n\t\t\t\tthrow new ExpressError({\n\t\t\t\t\tmessage: 'Invalid password',\n\t\t\t\t\tstatusCode: 400,\n\t\t\t\t\tdata: errors.replace(/[\\t]/, '').trim().split(/\\n/),\n\t\t\t\t\tstatus: 'warning'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (userPassword && userPassword.length < 50)\n\t\t\tuserPassword = await hashPassword(userPassword);\n\n\t\treturn Object.freeze({\n\t\t\tgetFirstName: () => firstName,\n\t\t\tgetLastName: () => lastName,\n\t\t\tgetBio: () => bio,\n\t\t\tgetIsActive: () => (isActive ? isActive : false),\n\t\t\tgetRole: () => (role ? role : 'user'),\n\t\t\tgetProfilePic: () => profilePicture,\n\t\t\tgetPassword: () => userPassword,\n\t\t\tgetIsDelete: () => isDeleted,\n\t\t\tgetGender: () => gender,\n\t\t\tgetEmail: () => email\n\t\t});\n\t};\n}\n"]}