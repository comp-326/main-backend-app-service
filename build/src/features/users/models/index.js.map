{"version":3,"sources":["../../src/features/users/models/index.ts"],"names":[],"mappings":";;;;;AACA,yEAAkD;AAGlD,MAAM,UAAU,GAAmC,IAAI,iBAAQ,CAAC,MAAM,CAAC;IACtE,SAAS,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACV;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,IAAI;KACd;IACD,KAAK,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;QACZ,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,IAAI;KACV;IACD,GAAG,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;KACV;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,CAAC;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,KAAK;KACb;IACD,QAAQ,EAAE;QACT,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KAEd;IACD,MAAM,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,CAAC;QACnD,OAAO,EAAE,gBAAgB;KACzB;IACD,SAAS,EAAE;QACV,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;QACd,MAAM,EAAE,KAAK;KACb;IACD,IAAI,EAAE;QACL,IAAI,EAAE,iBAAQ,CAAC,WAAW,CAAC,QAAQ;QACnC,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,WAAW;KAChB;IACD,cAAc,EAAE;QACf,IAAI,EAAE,iBAAQ,CAAC,WAAW,CAAC,QAAQ;QACnC,QAAQ,EAAE,KAAK;QACf,GAAG,EAAE,OAAO;QACZ,OAAO,EAAE,EAAE;KACX;CAED,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,WAAU,KAAa;IAC5D,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAEpE,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AACF,MAAM,SAAS,GAAG,iBAAQ,CAAC,KAAK,CAAoC,OAAO,EAAE,UAAU,CAAC,CAAC;AAEzF,kBAAe,SAAS,CAAC","file":"index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport mongoose from '../../../databases/mongodb';\nimport { IUserDocument, IUserDocumentModel } from './interfaces';\n\nconst userSchema: mongoose.Schema<IUserDocument> = new mongoose.Schema({\n\tfirstName: {\n\t\ttype: String,\n\t\trequired: true,\n\t\ttrim: true\n\t},\n\tlastName: {\n\t\ttype: String,\n\t\ttrim: true,\n\t\trequired: true,\n\t},\n\temail: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tunique: true,\n\t\tindex: true,\n\t\ttrim: true\n\t},\n\tbio: {\n\t\ttype: String,\n\t\tdefault: '',\n\t\ttrim: true\n\t},\n\tpassword: {\n\t\ttype: String,\n\t\tminlength: 8,\n\t\trequired: true,\n\t\tselect: false\n\t},\n\tisActive: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\n\t},\n\tgender: {\n\t\ttype: String,\n\t\tenum: ['male', 'female', 'other', 'rather not say'],\n\t\tdefault: 'rather not say',\n\t},\n\tisDeleted: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tselect: false\n\t},\n\trole: {\n\t\ttype: mongoose.SchemaTypes.ObjectId,\n\t\trequired: true,\n\t\tref: 'UserRoles'\n\t},\n\tprofilePicture: {\n\t\ttype: mongoose.SchemaTypes.ObjectId,\n\t\trequired: false,\n\t\tref: 'Media',\n\t\tdefault: ''\n\t}\n\n});\n\nuserSchema.statics.findByEmail = async function(email: string){\n\tconst user = await userModel.findOne({ email }).select('+password');\n\n\treturn user;\n};\nconst userModel = mongoose.model<IUserDocument, IUserDocumentModel>('Users', userSchema);\n\nexport default userModel;"]}