{"version":3,"sources":["../../src/features/users/routes/forgotPasswordRoute.ts"],"names":[],"mappings":";;;;;AACA,qCAAiC;AACjC,iEAA4C;AAC5C,+DAA2C;AAC3C,4CAA2C;AAG3C,SAAwB,mBAAmB,CAAC,GAAU;IACrD,OAAO,CAAC,QAAe,EAAC,EAAE;QACzB,MAAM,WAAW,GAAG,IAAI,uBAAW,CAAC,oBAAc,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,IAAI,qBAAc,CAAC,WAAW,CAAC,CAAC;QACnD,MAAM,UAAU,GAAG,IAAA,gBAAM,GAAE,CAAC;QAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,EAAC,UAAU,CAAC,CAAC;QAClC,UAAU,CAAC,IAAI,CAAC,0BAA0B,EAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAE7E,CAAC,CAAC;AACH,CAAC;AATD,sCASC","file":"forgotPasswordRoute.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Router } from 'express';\nimport UserController from '../controllers';\nimport UserRepository from '../repository';\nimport { UserUseCase } from '../use-cases';\n\n\nexport default function forgotPasswordRoute(app:Router){\n\treturn (pathName:string)=>{\n\t\tconst userUseCase = new UserUseCase(UserRepository);\n\t\tconst controller = new UserController(userUseCase);\n\t\tconst userRouter = Router();\n\t\tapp.use(`${pathName}`,userRouter);\n\t\tuserRouter.post('/account/password/forgot',controller.getPasswordResetLink);\n\n\t};\n}"]}