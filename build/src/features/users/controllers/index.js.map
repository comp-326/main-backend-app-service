{"version":3,"sources":["../../src/features/users/controllers/index.ts"],"names":[],"mappings":";;AAEA,sEAAmE;AAKnE,MAAM,cAAc;IAGnB,YAAY,OAAsB;QAWlC,mBAAc,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACrE,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAChC,GAAG,CAAC,MAAM,CAAC,EAAE,CACb,CAAC;YAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC;QAGF,eAAU,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACjE,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAChC,GAAG,CAAC,MAAM,CAAC,EAAE,CACb,CAAC;YAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC;QAGF,oBAAe,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YAEtE,IAAI;gBAEH,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAC9C,GAAG,CAAC,MAAM,CAAC,KAAK,CAChB,CAAC;gBAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;aACtC;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAGF,iBAAY,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACnE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAC3C,GAAG,CAAC,MAAM,CAAC,EAAE,CACb,CAAC;YAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAGF,eAAU,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACjE,IAAI;gBAEH,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAC5B,GAAG,CAAC,IAAI,CACR,CAAC;gBAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAC3B;YAAC,OAAO,GAAQ,EAAE;gBAClB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAGF,6BAAwB,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YAC/E,IAAI;gBACH,MAAM,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAC3C,GAAG,CAAC,IAAI,CAAC,KAAK,CACd,CAAC;gBAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC3B,OAAO,EAAE,sDAAsD;oBAC/D,MAAM,EAAE,IAAI;oBACZ,UAAU,EAAE,GAAG;oBACf,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,EAAE;iBACR,CAAC,CAAC;aACH;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAGF,yBAAoB,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YAC3E,IAAI;gBACH,MAAM,IAAI,CAAC,OAAO,CAAC,qBAAqB,CACvC,GAAG,CAAC,IAAI,CAAC,KAAK,CACd,CAAC;gBAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC3B,OAAO,EAAE,0DAA0D;oBACnE,MAAM,EAAE,IAAI;oBACZ,UAAU,EAAE,GAAG;oBACf,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,EAAE;iBACR,CAAC,CAAC;aACH;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAEF,oBAAe,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACtE,IAAI;gBAEH,MAAM,IAAI,CAAC,OAAO,CAAC,mBAAmB,CACrC,GAAG,CAAC,MAAM,CAAC,KAAK,CAChB,CAAC;gBAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAC3B;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAGF,cAAS,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YAChE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;YACnC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACzC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC,CAAC,CAAC;YAEH,OAAO,GAAG;iBACR,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CACJ;gBACC,IAAI;gBACJ,OAAO,EAAE,SAAS;aAClB,CACD,CAAC;QACJ,CAAC,CAAC;QAGF,kBAAa,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACpE,IAAG;gBAEF,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;gBAE1B,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CACjC,EAAE,EACF,GAAG,CAAC,IAAI,CACR,CAAC;gBAEF,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aAC3B;YAAA,OAAM,GAAG,EAAE;gBAEX,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QAEF,CAAC,CAAC;QAGF,qBAAgB,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACvE,IAAI;gBACH,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;oBACd,MAAM,IAAI,2BAAY,CAAC;wBACtB,IAAI,EAAE,EAAE;wBACR,OAAO,EAAE,kBAAkB;wBAC3B,MAAM,EAAE,SAAS;wBACjB,UAAU,EAAE,GAAG;qBACf,CAAC,CAAC;iBACH;gBACD,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBAEzB,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC1B,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,EACpC,GAAG,CAAC,IAAI,CACR,CAAC;gBAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAChC;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QAGF,mBAAc,GAAG,KAAK,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW,EAAE,EAAE;YACrE,IAAI;gBACH,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBAE7D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvC;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aACjB;QACF,CAAC,CAAC;QA1LD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;CA0LD;AAED,kBAAe,cAAc,CAAC","file":"index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExpressError } from '../../../common/errors/ExpressError';\nimport { INext, IRequest, IResponse } from '../../../common/types';\nimport { IUserController, IUserUseCases } from './../interfaces';\n\n\nclass UserController implements IUserController{\n\tprotected useCase: IUserUseCases;\n\n\tconstructor(useCase: IUserUseCases){\n\t\tthis.useCase = useCase;\n\t}\n\n\t/**\n\t * Soft delete a user from db\n\t * @summary A simple delete of user entity\n\t * @param {IRequest} req - Express default request obj\n\t * @param {IResponse} res - Express default rquest obj\n\t * @return {IResponse} Response date returned by user usecase\n\t */\n\tsoftDeleteUser = async (req: IRequest, res: IResponse, next: INext) => {\n\t\tawait this.useCase.softRemoveUser(\n\t\t\treq.params.id\n\t\t);\n\n\t\treturn res.sendStatus(200);\n\t};\n\n\n\tdeleteUser = async (req: IRequest, res: IResponse, next: INext) => {\n\t\tawait this.useCase.hardRemoveUser(\n\t\t\treq.params.id\n\t\t);\n\n\t\treturn res.sendStatus(200);\n\t};\n\n\n\tfindUserByEmail = async (req: IRequest, res: IResponse, next: INext) => {\n\n\t\ttry {\n\n\t\t\tconst data = await this.useCase.listUserByEmail(\n\t\t\t\treq.params.email\n\t\t\t);\n\n\t\t\treturn res.status(200).json({ data });\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\n\tfindUserById = async (req: IRequest, res: IResponse, next: INext) => {\n\t\tconst data = await this.useCase.listUserById(\n\t\t\treq.params.id\n\t\t);\n\n\t\treturn res.status(200).json({ data });\n\t};\n\n\n\tcreateUser = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\n\t\t\tawait this.useCase.addNewUser(\n\t\t\t\treq.body\n\t\t\t);\n\n\t\t\treturn res.sendStatus(201);\n\t\t} catch (err: any) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\n\tgetAccountActivationLink = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\t\t\tawait this.useCase.sendAccountActivationLink(\n\t\t\t\treq.body.email\n\t\t\t);\n\n\t\t\treturn res.status(200).json({\n\t\t\t\tmessage: 'Activation email has been sent to your email address',\n\t\t\t\tstatus: 'ok',\n\t\t\t\tstatusCode: 200,\n\t\t\t\tparams: {},\n\t\t\t\tdata: {}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\n\tgetPasswordResetLink = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\t\t\tawait this.useCase.sendPasswordResetLink(\n\t\t\t\treq.body.email\n\t\t\t);\n\n\t\t\treturn res.status(200).json({\n\t\t\t\tmessage: 'Password reset email has been sent to your email address',\n\t\t\t\tstatus: 'ok',\n\t\t\t\tstatusCode: 200,\n\t\t\t\tparams: {},\n\t\t\t\tdata: {}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\tactivateAccount = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\t\t\t\n\t\t\tawait this.useCase.activateUserAccount(\n\t\t\t\treq.params.token\n\t\t\t);\n\n\t\t\treturn res.sendStatus(200);\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\n\tfindUsers = async (req: IRequest, res: IResponse, next: INext) => {\n\t\tconst { limit, page } = req.params;\n\t\tconst data = await this.useCase.listUsers({\n\t\t\tlimit: limit ? parseInt(limit) : 20,\n\t\t\toffset: page ? parseInt(page) : 1\n\t\t});\n\n\t\treturn res\n\t\t\t.status(200)\n\t\t\t.json(\n\t\t\t\t{\n\t\t\t\t\tdata,\n\t\t\t\t\tmessage: 'Success',\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\n\tupdateAccount = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry{\n\n\t\t\tconst { id } = req.params;\n\t\t\t\n\t\t\tawait this.useCase.editUserProfile(\n\t\t\t\tid,\n\t\t\t\treq.body\n\t\t\t);\n\t\t\t\t\n\t\t\treturn res.sendStatus(200);\n\t\t}catch(err) {\n\n\t\t\treturn next(err);\n\t\t}\n\t\t\t\n\t};\n\n\n\tupdateProfilePic = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\t\t\tif (!req.file) {\n\t\t\t\tthrow new ExpressError({\n\t\t\t\t\tdata: {},\n\t\t\t\t\tmessage: 'No file uploaded',\n\t\t\t\t\tstatus: 'warning',\n\t\t\t\t\tstatusCode: 400\n\t\t\t\t});\n\t\t\t}\n\t\t\treq.body.file = req.file;\n\n\t\t\tconst { id } = req.params;\n\t\t\tawait this.useCase.editUserProfile(id,\n\t\t\t\treq.body\n\t\t\t);\n\n\t\t\treturn res.status(200).json({});\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n\n\n\tupdatePassword = async (req: IRequest, res: IResponse, next: INext) => {\n\t\ttry {\n\t\t\tawait this.useCase.resetPassword(req.params.token, req.body);\n\n\t\t\treturn res.status(200).json('Success');\n\t\t} catch (err) {\n\t\t\treturn next(err);\n\t\t}\n\t};\n}\n\nexport default UserController;\n"]}