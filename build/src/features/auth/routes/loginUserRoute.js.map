{"version":3,"sources":["../../src/features/auth/routes/loginUserRoute.ts"],"names":[],"mappings":";;;;;AACA,gDAA8C;AAC9C,4CAA2C;AAC3C,qCAAiC;AACjC,+DAA2C;AAE3C,SAAwB,cAAc,CAAC,GAAU;IAChD,OAAO,CAAC,QAAe,EAAC,EAAE;QACzB,MAAM,WAAW,GAAG,IAAI,uBAAW,CAAC,oBAAc,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,IAAI,4BAAc,CAAC,WAAW,CAAC,CAAC;QACnD,MAAM,UAAU,GAAG,IAAA,gBAAM,GAAE,CAAC;QAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,EAAC,UAAU,CAAC,CAAC;QAClC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAE5C,CAAC,CAAC;AACH,CAAC;AATD,iCASC","file":"loginUserRoute.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {AuthController} from '../controllers';\nimport { AuthUseCase } from '../use-cases';\nimport { Router } from 'express';\nimport authRepository from '../repository';\n\nexport default function loginUserRoute(app:Router){\n\treturn (pathName:string)=>{\n\t\tconst authUseCase = new AuthUseCase(authRepository);\n\t\tconst controller = new AuthController(authUseCase);\n\t\tconst userRouter = Router();\n\t\tapp.use(`${pathName}`,userRouter);\n\t\tuserRouter.post('/login',controller.login);\n\n\t};\n}"]}