{"version":3,"sources":["../../src/features/auth/routes/logoutUserRoute.ts"],"names":[],"mappings":";;;;;AACA,gDAAgD;AAChD,4CAA2C;AAC3C,qCAAiC;AACjC,+DAA2C;AAC3C,oDAA0D;AAE1D,SAAwB,eAAe,CAAC,GAAW;IAClD,OAAO,CAAC,QAAgB,EAAE,EAAE;QAC3B,MAAM,WAAW,GAAG,IAAI,uBAAW,CAAC,oBAAc,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,IAAI,4BAAc,CAAC,WAAW,CAAC,CAAC;QACnD,MAAM,UAAU,GAAG,IAAA,gBAAM,GAAE,CAAC;QAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;QACnC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAa,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;IAE9D,CAAC,CAAC;AACH,CAAC;AATD,kCASC","file":"logoutUserRoute.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { AuthController } from '../controllers';\nimport { AuthUseCase } from '../use-cases';\nimport { Router } from 'express';\nimport authRepository from '../repository';\nimport { loginRequired } from '../../../middlewares/Auth';\n\nexport default function logoutUserRoute(app: Router) {\n\treturn (pathName: string) => {\n\t\tconst authUseCase = new AuthUseCase(authRepository);\n\t\tconst controller = new AuthController(authUseCase);\n\t\tconst userRouter = Router();\n\t\tapp.use(`${pathName}`, userRouter);\n\t\tuserRouter.post('/logout', loginRequired, controller.logout);\n\n\t};\n}"]}