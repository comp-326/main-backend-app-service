{"version":3,"sources":["../../src/helpers/alphabet.ts"],"names":[],"mappings":";;AAGA,MAAM,SAAS,GAAG,GAAG,EAAE;IACtB,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC1B,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7B,MAAM,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAI1B,KAAK,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;QACxD,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAKnD,KAAK,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;QAC1D,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAKnD,KAAK,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;QAChE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAK1C,KAAK,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;QAChE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAE1C,MAAM,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,CAAC;SACzD,MAAM,CAAC,OAAO,CAAC;SACf,MAAM,CAAC,OAAO,CAAC,CAAC;IAElB,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAC5E,CAAC,CAAC;AACF,MAAM,OAAO,GAAG,SAAS,EAAE,CAAC;AAE5B,kBAAe,MAAM,CAAC,MAAM,CAAC;IAC5B,SAAS,EAAE,OAAO,CAAC,gBAAgB;IACnC,SAAS,EAAE,OAAO,CAAC,gBAAgB;IACnC,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,SAAS,EAAE,OAAO,CAAC,SAAS;CAC5B,CAAC,CAAC","file":"alphabet.js","sourcesContent":["/**\n * ************ BUILD ALPHABETS *******\n */\nconst alphabets = () => {\n\tconst lowerCaseLetters = [];\n\tconst upperCaseLetters = [];\n\tconst symbols = [];\n\tconst numbers = [];\n\tconst llRange = [97, 122];\n\tconst symbolRange = [33, 47];\n\tconst numberRange = [48, 57];\n\tconst uppRange = [65, 90];\n\t/**\n\t * Generate lowercase letters\n\t */\n\tfor (let index = llRange[0]; index <= llRange[1]; index++) \n\t\tlowerCaseLetters.push(String.fromCharCode(index));\n\t\n\t/**\n\t * Generate uppercase letters\n\t */\n\tfor (let index = uppRange[0]; index <= uppRange[1]; index++) \n\t\tupperCaseLetters.push(String.fromCharCode(index));\n\t\n\t/**\n\t * Generate numbers\n\t */\n\tfor (let index = numberRange[0]; index <= numberRange[1]; index++) \n\t\tnumbers.push(String.fromCharCode(index));\n\t\n\t/**\n\t * Generate Symbols\n\t */\n\tfor (let index = symbolRange[0]; index <= symbolRange[1]; index++) \n\t\tsymbols.push(String.fromCharCode(index));\n\t\n\tconst alphabets = upperCaseLetters.concat(lowerCaseLetters)\n\t\t.concat(numbers)\n\t\t.concat(symbols);\n\n\treturn { alphabets, lowerCaseLetters, upperCaseLetters, numbers, symbols };\n};\nconst alphabs = alphabets();\n\nexport default Object.freeze({\n\tLOWERCASE: alphabs.lowerCaseLetters,\n\tUPPERCASE: alphabs.upperCaseLetters,\n\tSYMBOLS: alphabs.symbols,\n\tNUMBERS: alphabs.numbers,\n\tALPHABETS: alphabs.alphabets,\n});\n"]}