{"version":3,"sources":["../../src/common/errors/ErrorHandler.ts"],"names":[],"mappings":";;;;;AAEA,iDAA8C;AAC9C,0EAAkD;AAGlD,mBAAyB,GAAQ,EAAE,GAAa,EAAE,GAAc,EAAE,IAAW;IAC5E,IAAI,GAAG,YAAY,2BAAY,EAAE;QAChC,MAAM,KAAK,GAAG,GAAmB,CAAC;QAElC,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,mBACpC,KAAK,EACP,CAAC;KACH;IACD,IAAI,GAAG,CAAC,IAAI,KAAK,iBAAiB,EAAE;QACnC,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,KAAK,CAAC,IAAI,CAAC,GAAG,IAAA,oBAAU,EAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAEpD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC3B,IAAI,EAAE;gBACL,KAAK;aACL;YACD,MAAM,EAAE,OAAO;YACf,OAAO,EAAE,gBAAgB;SACzB,CAAC,CAAC;KACH;IACD,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,MAAM,CAAC,GAAyB,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,KAAK,IAAI,GAAG,IAAA,oBAAU,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAExD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC3B,MAAM,EAAE,OAAO;YACf,OAAO,EAAE,iBAAiB;YAC1B,IAAI,EAAE,EAAE,KAAK,EAAE;SACf,CAAC,CAAC;KACH;IAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC3B,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,uBAAuB;QAC5D,IAAI,EAAE,EAAE;KACR,CAAC,CAAC;AACJ,CAAC;AAvCD,4BAuCC","file":"ErrorHandler.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExpressError } from './ExpressError';\nimport capitalize from '../../helpers/capitalize';\nimport { INext, IRequest, IResponse } from '../types';\n\nexport default function (err: any, req: IRequest, res: IResponse, next: INext){\n\tif (err instanceof ExpressError) {\n\t\tconst error = err as ExpressError;\n\n\t\treturn res.status(error.statusCode).json({\n\t\t\t...error\n\t\t});\n\t}\n\tif (err.name === 'ValidationError') {\n\t\tconst error: string[] = [];\n\t\tfor (const key of Object.keys(err['errors'])) \n\t\t\terror.push(`${capitalize(key)} field is required`);\n\t\t\n\t\treturn res.status(400).json({\n\t\t\tdata: {\n\t\t\t\terror\n\t\t\t},\n\t\t\tstatus: 'error',\n\t\t\tmessage: 'Invalid inputs'\n\t\t});\n\t}\n\tif (err.code === 11000) {\n\t\tlet error = '';\n\t\tconst x: { [x: string]: any } = err['keyValue'];\n\t\tfor (const key of Object.keys(x)) \n\t\t\terror += `${capitalize(key)} ${x[key]} already exists`;\n\t\t\n\t\treturn res.status(409).json({\n\t\t\tstatus: 'error',\n\t\t\tmessage: 'Duplicate entry',\n\t\t\tdata: { error }\n\t\t});\n\t}\n\n\treturn res.status(500).json({\n\t\tstatus: 'error',\n\t\tmessage: err.message ? err.message : 'Internal server error',\n\t\tdata: {}\n\t});\n}\n"]}